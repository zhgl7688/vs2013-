//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WebForm.cn.edu.ecnu.duanxin {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SMSServiceSoap", Namespace="http://tempuri.org/")]
    public partial class SMSService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private MySoapHeader mySoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMS_ZLWXOperationCompleted;
        
        private System.Threading.SendOrPostCallback WaitSMSSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback YunPianCheckMsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryScreenSMSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SMSService() {
            this.Url = global::WebForm.Properties.Settings.Default.WebForm_cn_edu_ecnu_duanxin_SMSService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MySoapHeader MySoapHeaderValue {
            get {
                return this.mySoapHeaderValueField;
            }
            set {
                this.mySoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendSMS_ZLWXCompletedEventHandler SendSMS_ZLWXCompleted;
        
        /// <remarks/>
        public event WaitSMSSendCompletedEventHandler WaitSMSSendCompleted;
        
        /// <remarks/>
        public event YunPianCheckMsgCompletedEventHandler YunPianCheckMsgCompleted;
        
        /// <remarks/>
        public event QueryScreenSMSCompletedEventHandler QueryScreenSMSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMS(string phone, string content, string SendId) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        phone,
                        content,
                        SendId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string phone, string content, string SendId) {
            this.SendSMSAsync(phone, content, SendId, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string phone, string content, string SendId, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        phone,
                        content,
                        SendId}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS_ZLWX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSMS_ZLWX(string phone, int formatid, string content, string sToken, string SendId) {
            object[] results = this.Invoke("SendSMS_ZLWX", new object[] {
                        phone,
                        formatid,
                        content,
                        sToken,
                        SendId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMS_ZLWXAsync(string phone, int formatid, string content, string sToken, string SendId) {
            this.SendSMS_ZLWXAsync(phone, formatid, content, sToken, SendId, null);
        }
        
        /// <remarks/>
        public void SendSMS_ZLWXAsync(string phone, int formatid, string content, string sToken, string SendId, object userState) {
            if ((this.SendSMS_ZLWXOperationCompleted == null)) {
                this.SendSMS_ZLWXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMS_ZLWXOperationCompleted);
            }
            this.InvokeAsync("SendSMS_ZLWX", new object[] {
                        phone,
                        formatid,
                        content,
                        sToken,
                        SendId}, this.SendSMS_ZLWXOperationCompleted, userState);
        }
        
        private void OnSendSMS_ZLWXOperationCompleted(object arg) {
            if ((this.SendSMS_ZLWXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMS_ZLWXCompleted(this, new SendSMS_ZLWXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WaitSMSSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WaitSMSSend(string phone, string content) {
            object[] results = this.Invoke("WaitSMSSend", new object[] {
                        phone,
                        content});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WaitSMSSendAsync(string phone, string content) {
            this.WaitSMSSendAsync(phone, content, null);
        }
        
        /// <remarks/>
        public void WaitSMSSendAsync(string phone, string content, object userState) {
            if ((this.WaitSMSSendOperationCompleted == null)) {
                this.WaitSMSSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWaitSMSSendOperationCompleted);
            }
            this.InvokeAsync("WaitSMSSend", new object[] {
                        phone,
                        content}, this.WaitSMSSendOperationCompleted, userState);
        }
        
        private void OnWaitSMSSendOperationCompleted(object arg) {
            if ((this.WaitSMSSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WaitSMSSendCompleted(this, new WaitSMSSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/YunPianCheckMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string YunPianCheckMsg(string content) {
            object[] results = this.Invoke("YunPianCheckMsg", new object[] {
                        content});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void YunPianCheckMsgAsync(string content) {
            this.YunPianCheckMsgAsync(content, null);
        }
        
        /// <remarks/>
        public void YunPianCheckMsgAsync(string content, object userState) {
            if ((this.YunPianCheckMsgOperationCompleted == null)) {
                this.YunPianCheckMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnYunPianCheckMsgOperationCompleted);
            }
            this.InvokeAsync("YunPianCheckMsg", new object[] {
                        content}, this.YunPianCheckMsgOperationCompleted, userState);
        }
        
        private void OnYunPianCheckMsgOperationCompleted(object arg) {
            if ((this.YunPianCheckMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.YunPianCheckMsgCompleted(this, new YunPianCheckMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryScreenSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryScreenSMS(string ScreenId) {
            object[] results = this.Invoke("QueryScreenSMS", new object[] {
                        ScreenId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryScreenSMSAsync(string ScreenId) {
            this.QueryScreenSMSAsync(ScreenId, null);
        }
        
        /// <remarks/>
        public void QueryScreenSMSAsync(string ScreenId, object userState) {
            if ((this.QueryScreenSMSOperationCompleted == null)) {
                this.QueryScreenSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryScreenSMSOperationCompleted);
            }
            this.InvokeAsync("QueryScreenSMS", new object[] {
                        ScreenId}, this.QueryScreenSMSOperationCompleted, userState);
        }
        
        private void OnQueryScreenSMSOperationCompleted(object arg) {
            if ((this.QueryScreenSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryScreenSMSCompleted(this, new QueryScreenSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class MySoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SendSMS_ZLWXCompletedEventHandler(object sender, SendSMS_ZLWXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMS_ZLWXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMS_ZLWXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void WaitSMSSendCompletedEventHandler(object sender, WaitSMSSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WaitSMSSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WaitSMSSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void YunPianCheckMsgCompletedEventHandler(object sender, YunPianCheckMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class YunPianCheckMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal YunPianCheckMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void QueryScreenSMSCompletedEventHandler(object sender, QueryScreenSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryScreenSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryScreenSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591